const CACHE_PREFIX="storyapp-v2",RUNTIME=`${CACHE_PREFIX}-runtime`,PRECACHE=`${CACHE_PREFIX}-precache-v1`,PRECACHE_URLS=["/","/index.html","/styles/styles.css","/styles/responsives.css"];async function cacheFirst(t){const e=await caches.open(RUNTIME),a=await e.match(t);if(a)return a;try{const a=await fetch(t);return a&&200===a.status&&e.put(t,a.clone()),a}catch(t){return a||Response.error()}}async function networkFirst(t){const e=await caches.open(RUNTIME);try{const a=await fetch(t);return a&&200===a.status&&e.put(t,a.clone()),a}catch(a){return await e.match(t)||new Response("Offline",{status:503,statusText:"Service Unavailable"})}}self.addEventListener("install",(t=>{t.waitUntil((async()=>{const t=await caches.open(PRECACHE);await t.addAll(PRECACHE_URLS.map((t=>new Request(t,{cache:"reload"})))),await self.skipWaiting()})())})),self.addEventListener("activate",(t=>{t.waitUntil((async()=>{const t=await caches.keys();await Promise.all(t.filter((t=>t!==PRECACHE&&t!==RUNTIME)).map((t=>caches.delete(t)))),await self.clients.claim()})())})),self.addEventListener("fetch",(t=>{const{request:e}=t,a=new URL(e.url);"GET"===e.method&&(a.origin===self.location.origin&&a.pathname.startsWith("/api")?t.respondWith(networkFirst(e)):"image"===e.destination||/\.(png|jpg|jpeg|gif|webp|svg)$/i.test(a.pathname)?t.respondWith(cacheFirst(e)):t.respondWith(networkFirst(e)))})),self.addEventListener("push",(t=>{if(!t.data)return;let e={};try{e=t.data.json()}catch(a){e={title:"Story App",options:{body:String(t.data)}}}const a=e.title||"Story Notification",i=e.options||{};t.waitUntil(self.registration.showNotification(a,i))})),self.addEventListener("notificationclick",(t=>{t.notification.close();const e=(t.notification.data||{}).url||"/";t.waitUntil((async()=>{const t=await clients.matchAll({includeUncontrolled:!0,type:"window"});for(const a of t)if(a.url.includes(e))return void a.focus();await clients.openWindow(e)})())}));